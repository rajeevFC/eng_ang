{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/post.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction PagePostComponent_span_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 13);\n    i0.ɵɵtext(1, \"Please Enter A Vlid UserName!!!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PagePostComponent_span_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 13);\n    i0.ɵɵtext(1, \"Please Enter A Vlid Email-Id!!!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PagePostComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14)(1, \"label\");\n    i0.ɵɵelement(2, \"input\", 15);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const gender_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", gender_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", gender_r3, \" \");\n  }\n}\nclass PagePostComponent {\n  constructor(postForm) {\n    this.postForm = postForm;\n    this.genders = ['male', 'female'];\n  }\n  ngOnInit() {\n    this.signupForm = new FormGroup({\n      userData: new FormGroup({\n        'username': new FormControl('Rajeev Kumar', Validators.required),\n        'email': new FormControl('rk933510@gmail.com', [Validators.required, Validators.email])\n      }),\n      'gender': new FormControl('male')\n    });\n  }\n  onSubmit() {\n    console.log(this.signupForm.value);\n  }\n}\nPagePostComponent.ɵfac = function PagePostComponent_Factory(t) {\n  return new (t || PagePostComponent)(i0.ɵɵdirectiveInject(i1.PostService));\n};\nPagePostComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PagePostComponent,\n  selectors: [[\"app-page-post\"]],\n  decls: 18,\n  vars: 4,\n  consts: [[1, \"container\"], [1, \"row\"], [1, \"col-xs-12\", \"col-sm-10\", \"col-md-8\", \"col-sm-offset-1\", \"col-md-offset-2\"], [3, \"formGroup\", \"ngSubmit\"], [\"formGroupName\", \"userData\"], [1, \"form-group\"], [\"for\", \"username\"], [\"col-md-8\", \"\", \"type\", \"text\", \"id\", \"username\", \"formControlName\", \"username\", 1, \"form-control\"], [\"class\", \"help-block\", \"style\", \"color: red !important;\", 4, \"ngIf\"], [\"for\", \"email\"], [\"type\", \"text\", \"id\", \"email\", \"formControlName\", \"email\", 1, \"form-control\"], [\"class\", \"radio\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"help-block\", 2, \"color\", \"red !important\"], [1, \"radio\"], [\"type\", \"radio\", \"formControlName\", \"gender\", 3, \"value\"]],\n  template: function PagePostComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function PagePostComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(4, \"div\", 4)(5, \"div\", 5)(6, \"label\", 6);\n      i0.ɵɵtext(7, \"Username\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 7);\n      i0.ɵɵtemplate(9, PagePostComponent_span_9_Template, 2, 0, \"span\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 5)(11, \"label\", 9);\n      i0.ɵɵtext(12, \"email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"input\", 10);\n      i0.ɵɵtemplate(14, PagePostComponent_span_14_Template, 2, 0, \"span\", 8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(15, PagePostComponent_div_15_Template, 4, 2, \"div\", 11);\n      i0.ɵɵelementStart(16, \"button\", 12);\n      i0.ɵɵtext(17, \"Submit\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      let tmp_1_0;\n      let tmp_2_0;\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.signupForm);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", !((tmp_1_0 = ctx.signupForm.get(\"userData.username\")) == null ? null : tmp_1_0.valid) && ((tmp_1_0 = ctx.signupForm.get(\"userData.username\")) == null ? null : tmp_1_0.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", !((tmp_2_0 = ctx.signupForm.get(\"userData.email\")) == null ? null : tmp_2_0.valid) && ((tmp_2_0 = ctx.signupForm.get(\"userData.email\")) == null ? null : tmp_2_0.touched));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.genders);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.RadioControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i3.FormGroupName],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { PagePostComponent };","map":{"version":3,"names":["FormGroup","FormControl","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty","gender_r3","ɵɵtextInterpolate1","PagePostComponent","constructor","postForm","genders","ngOnInit","signupForm","userData","required","email","onSubmit","console","log","value","ɵɵdirectiveInject","i1","PostService","selectors","decls","vars","consts","template","PagePostComponent_Template","rf","ctx","ɵɵlistener","PagePostComponent_Template_form_ngSubmit_3_listener","ɵɵtemplate","PagePostComponent_span_9_Template","PagePostComponent_span_14_Template","PagePostComponent_div_15_Template","tmp_1_0","get","valid","touched","tmp_2_0"],"sources":["C:\\Users\\rkuma427\\OneDrive - Capgemini\\Desktop\\_mayangular\\app_answer\\src\\app\\user-space\\page-post\\page-post.component.ts","C:\\Users\\rkuma427\\OneDrive - Capgemini\\Desktop\\_mayangular\\app_answer\\src\\app\\user-space\\page-post\\page-post.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup,FormControl, Validators } from '@angular/forms';\nimport { PostService } from 'src/app/service/post.service';\n\n@Component({\n  selector: 'app-page-post',\n  templateUrl: './page-post.component.html',\n  styleUrls: ['./page-post.component.css']\n})\nexport class PagePostComponent implements OnInit {\nconstructor(private postForm:PostService){}\n\ngenders = ['male', 'female'];\nsignupForm: FormGroup;\n ngOnInit(): void {\n   this.signupForm = new FormGroup ({\n     userData: new FormGroup ({\n       'username': new FormControl('Rajeev Kumar', Validators.required),\n     'email': new FormControl('rk933510@gmail.com', [Validators.required, Validators.email]),\n     }),\n     'gender': new FormControl('male'),\n   })\n }\n onSubmit() {\n   console.log(this.signupForm.value);\n\n }\n}\n","<!--  -->\n<!-- <div class=\"card m-3\"> -->\n  <!-- <div class=\"card-body\"> -->\n    <!-- <div class=\"form-group form-inline text-left\"> -->\n      <!-- <label class=\"mr-4\">Title: </label> -->\n      <!-- <input class=\"form-control col-10\" #titlePost/> -->\n    <!-- </div> -->\n    <!-- <div class=\"form-group\"> -->\n      <!-- <label>Body: </label> -->\n      <!-- <textarea class=\"form-control\" #bodyPost></textarea> -->\n    <!-- </div> -->\n    <!-- <button class=\"btn btn-block btn-primary\"  -->\n    <!-- (click)=\"addPost({userId: '10', title: titlePost.value, body: bodyPost.value}); titlePost.value=''; bodyPost.value=''\"> -->\n    <!-- Post </button> -->\n  <!-- </div> -->\n<!-- </div> -->\n\n\n\n<!-- <form> -->\n    <!-- <div class=\"form-group\"> -->\n      <!-- <label for=\"exampleInputEmail1\">Email address</label> -->\n      <!-- <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\"> -->\n      <!-- <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email with anyone else.</small> -->\n    <!-- </div> -->\n    <!-- <div class=\"form-group\"> -->\n      <!-- <label for=\"exampleInputPassword1\">Password</label> -->\n      <!-- <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\"> -->\n    <!-- </div> -->\n    <!-- <div class=\"form-group form-check\"> -->\n      <!-- <input type=\"checkbox\" class=\"form-check-input\" id=\"exampleCheck1\"> -->\n      <!-- <label class=\"form-check-label\" for=\"exampleCheck1\">Check me out</label> -->\n    <!-- </div> -->\n    <!-- <button type=\"submit\" class=\"btn btn-primary\">Submit</button> -->\n  <!-- </form> -->\n\n\n  <!-- <div class=\"container\"> -->\n    <!-- <div class=\"row\"> -->\n      <!-- <div class=\"col-xs-12 col-sm-10 col-md-8 col-sm-offset-1 col-md-offset-2\"> -->\n      <!-- <form [formGroup]=\"signupForm\" (ngSubmit) = \"onSubmit()\"> -->\n\n        <!-- <div formGroupName = \"userData\"> -->\n            <!-- <div class=\"form-group\"> -->\n            <!-- <label for=\"username\">Username</label> -->\n            <!-- <input -->\n              <!-- type=\"text\" -->\n              <!-- id=\"username\" -->\n              <!-- formControlName=\"username\" -->\n              <!-- class=\"form-control\"> -->\n              <!-- <span *ngIf = \"!signupForm.get('userData.username').valid && signupForm.get('userData.username').touched\" class=\"help-block\" style=\"color: red !important;\">Please Enter A Vlid UserName!!!</span> -->\n          <!-- </div> -->\n          <!-- <button class=\"btn btn-primary\" type=\"submit\">Submit</button> -->\n        <!-- </form> -->\n        <!-- </div> -->\n        <!-- </div> -->\n        <!-- </div> -->\n\n\n\n        <div class=\"container\">\n            <div class=\"row\">\n              <div class=\"col-xs-12 col-sm-10 col-md-8 col-sm-offset-1 col-md-offset-2\">\n                <form [formGroup]=\"signupForm\" (ngSubmit) = \"onSubmit()\">\n                  <div formGroupName = \"userData\">\n                    <div class=\"form-group\">\n                    <label for=\"username\">Username</label>\n                    <input col-md-8\n                      type=\"text\"\n                      id=\"username\"\n                      formControlName=\"username\"\n                      class=\"form-control\">\n                      <span *ngIf = \"!signupForm.get('userData.username')?.valid && signupForm.get('userData.username')?.touched\" class=\"help-block\" style=\"color: red !important;\">Please Enter A Vlid UserName!!!</span>\n                  </div>\n                  <div class=\"form-group\">\n                    <label for=\"email\">email</label>\n                    <input\n                      type=\"text\"\n                      id=\"email\"\n                      formControlName=\"email\"\n                      class=\"form-control\">\n                    <span *ngIf = \"!signupForm.get('userData.email')?.valid&& signupForm.get('userData.email')?.touched\" class=\"help-block\" style=\"color: red !important;\">Please Enter A Vlid Email-Id!!!</span>\n                  </div>\n                  </div>\n                  <div class=\"radio\" *ngFor=\"let gender of genders\">\n                    <label>\n                      <input\n                        type=\"radio\"\n                        formControlName=\"gender\"\n                        [value]=\"gender\">{{ gender }}\n                    </label>\n                  </div>\n                  <button class=\"btn btn-primary\" type=\"submit\">Submit</button>\n                </form>\n              </div>\n            </div>\n          </div>\n          "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}