{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\n// import { CommentModel } from '../schema/commentModel';\nclass PageService {\n  // apiUrl = 'https://jsonplaceholder.typicode.com/users';\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://jsonplaceholder.typicode.com/comments';\n  }\n}\nPageService.ɵfac = function PageService_Factory(t) {\n  return new (t || PageService)(i0.ɵɵinject(i1.HttpClient));\n};\nPageService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PageService,\n  factory: PageService.ɵfac,\n  providedIn: 'root'\n});\nexport { PageService };","map":{"version":3,"names":["PageService","constructor","http","apiUrl","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\rkuma427\\OneDrive - Capgemini\\Desktop\\_mayangular\\app_answer\\src\\app\\service\\page.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n// import { CommentModel } from '../schema/commentModel';\n@Injectable({\n  providedIn: 'root'\n})\nexport class PageService {\napiUrl='https://jsonplaceholder.typicode.com/comments';\n// apiUrl = 'https://jsonplaceholder.typicode.com/users';\n  constructor(private http:HttpClient) { }\n  //  headers = new HttpHeaders({'Content-Type': 'application/json'})\n// const headers = new HttpHeaders({'Content-Type':'application/json; charset=utf-8'});\n\n  // getComment():Observable<CommentModel[]>{\n\n    // return this.http.get<CommentModel[]>(this.apiUrl,{ headers: new HttpHeaders({'Content-Type': 'application/json;charset=utf-8'})});\n  // }\n\n}\n"],"mappings":";;AAGA;AACA,MAGaA,WAAW;EAExB;EACEC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAF1B,KAAAC,MAAM,GAAC,+CAA+C;EAEb;;AAH5BH,WAAW,C;mBAAXA,WAAW,EAAAI,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXP,WAAW,C;SAAXA,WAAW;EAAAQ,OAAA,EAAXR,WAAW,CAAAS,IAAA;EAAAC,UAAA,EAFV;AAAM;SAEPV,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}