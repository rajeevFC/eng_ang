{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/comment.service\";\nimport * as i2 from \"@angular/common\";\nfunction CommentComponent_tr_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const key_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(key_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(key_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(key_r1.email);\n  }\n}\nclass CommentComponent {\n  constructor(commentService) {\n    this.commentService = commentService;\n  }\n  ngOnInit() {\n    this.getCoomentList();\n  }\n  getCoomentList() {\n    this.commentService.getComments().subscribe(res => {\n      this.commentResult = res;\n      console.log(this.commentResult);\n    });\n  }\n}\nCommentComponent.ɵfac = function CommentComponent_Factory(t) {\n  return new (t || CommentComponent)(i0.ɵɵdirectiveInject(i1.CommentService));\n};\nCommentComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CommentComponent,\n  selectors: [[\"app-comment\"]],\n  decls: 12,\n  vars: 1,\n  consts: [[4, \"ngFor\", \"ngForOf\"]],\n  template: function CommentComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"table\")(1, \"tbody\")(2, \"tr\")(3, \"th\");\n      i0.ɵɵtext(4, \"A\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"th\");\n      i0.ɵɵtext(6, \"B\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"th\");\n      i0.ɵɵtext(8, \"C\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"th\");\n      i0.ɵɵtext(10, \"D\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(11, CommentComponent_tr_11_Template, 7, 3, \"tr\", 0);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"ngForOf\", ctx.commentResult);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { CommentComponent };","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","key_r1","id","name","email","CommentComponent","constructor","commentService","ngOnInit","getCoomentList","getComments","subscribe","res","commentResult","console","log","ɵɵdirectiveInject","i1","CommentService","selectors","decls","vars","consts","template","CommentComponent_Template","rf","ctx","ɵɵtemplate","CommentComponent_tr_11_Template","ɵɵproperty"],"sources":["C:\\Users\\rkuma427\\OneDrive - Capgemini\\Desktop\\_mayangular\\app_answer\\src\\app\\comment\\comment.component.ts","C:\\Users\\rkuma427\\OneDrive - Capgemini\\Desktop\\_mayangular\\app_answer\\src\\app\\comment\\comment.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Injectable } from '@angular/core';\nimport { CommentService } from '../service/comment.service';\nimport { commentModel } from '../schema/commentModel';\n\n@Component({\n  selector: 'app-comment',\n  templateUrl: './comment.component.html',\n  styleUrls: ['./comment.component.css']\n})\nexport class CommentComponent implements OnInit{\n  commentResult:commentModel[];\nconstructor(private commentService:CommentService){}\n\nngOnInit(): void {\n  this.getCoomentList();\n}\n\ngetCoomentList(){\n  this.commentService.getComments().subscribe((res)=>{\n    this.commentResult= res;\n    console.log(this.commentResult);\n  })\n  \n}\n}\n","<table>\n    <tbody>\n        <tr>\n<th>A</th>\n<th>B</th>\n<th>C</th>\n<th>D</th>\n        </tr>\n        <tr *ngFor=\"let key of commentResult\">\n            <td>{{key.id}}</td>\n            <td>{{key.name}}</td>\n            <td>{{key.email}}</td>\n\n        </tr>\n    </tbody>\n</table>\n"],"mappings":";;;;;ICQQA,EAAA,CAAAC,cAAA,SAAsC;IAC9BD,EAAA,CAAAE,MAAA,GAAU;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACnBH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,GAAY;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACrBH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,GAAa;IAAAF,EAAA,CAAAG,YAAA,EAAK;;;;IAFlBH,EAAA,CAAAI,SAAA,GAAU;IAAVJ,EAAA,CAAAK,iBAAA,CAAAC,MAAA,CAAAC,EAAA,CAAU;IACVP,EAAA,CAAAI,SAAA,GAAY;IAAZJ,EAAA,CAAAK,iBAAA,CAAAC,MAAA,CAAAE,IAAA,CAAY;IACZR,EAAA,CAAAI,SAAA,GAAa;IAAbJ,EAAA,CAAAK,iBAAA,CAAAC,MAAA,CAAAG,KAAA,CAAa;;;ADN7B,MAKaC,gBAAgB;EAE7BC,YAAoBC,cAA6B;IAA7B,KAAAA,cAAc,GAAdA,cAAc;EAAiB;EAEnDC,QAAQA,CAAA;IACN,IAAI,CAACC,cAAc,EAAE;EACvB;EAEAA,cAAcA,CAAA;IACZ,IAAI,CAACF,cAAc,CAACG,WAAW,EAAE,CAACC,SAAS,CAAEC,GAAG,IAAG;MACjD,IAAI,CAACC,aAAa,GAAED,GAAG;MACvBE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,aAAa,CAAC;IACjC,CAAC,CAAC;EAEJ;;AAdaR,gBAAgB,C;mBAAhBA,gBAAgB,EAAAV,EAAA,CAAAqB,iBAAA,CAAAC,EAAA,CAAAC,cAAA;AAAA;AAAhBb,gBAAgB,C;QAAhBA,gBAAgB;EAAAc,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,0BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCV7B9B,EAAA,CAAAC,cAAA,YAAO;MAGHD,EAAA,CAAAE,MAAA,QAAC;MAAAF,EAAA,CAAAG,YAAA,EAAK;MACVH,EAAA,CAAAC,cAAA,SAAI;MAAAD,EAAA,CAAAE,MAAA,QAAC;MAAAF,EAAA,CAAAG,YAAA,EAAK;MACVH,EAAA,CAAAC,cAAA,SAAI;MAAAD,EAAA,CAAAE,MAAA,QAAC;MAAAF,EAAA,CAAAG,YAAA,EAAK;MACVH,EAAA,CAAAC,cAAA,SAAI;MAAAD,EAAA,CAAAE,MAAA,SAAC;MAAAF,EAAA,CAAAG,YAAA,EAAK;MAEFH,EAAA,CAAAgC,UAAA,KAAAC,+BAAA,gBAKK;MACTjC,EAAA,CAAAG,YAAA,EAAQ;;;MANgBH,EAAA,CAAAI,SAAA,IAAgB;MAAhBJ,EAAA,CAAAkC,UAAA,YAAAH,GAAA,CAAAb,aAAA,CAAgB;;;;;;SDE/BR,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}