{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass CommentService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://jsonplaceholder.typicode.com/comments';\n  }\n  getComments() {\n    return this.http.get(this.apiUrl, {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json;charset=utf-8'\n      })\n    });\n  }\n}\nCommentService.ɵfac = function CommentService_Factory(t) {\n  return new (t || CommentService)(i0.ɵɵinject(i1.HttpClient));\n};\nCommentService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CommentService,\n  factory: CommentService.ɵfac,\n  providedIn: 'root'\n});\nexport { CommentService };","map":{"version":3,"names":["HttpHeaders","CommentService","constructor","http","apiUrl","getComments","get","headers","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\rkuma427\\OneDrive - Capgemini\\Desktop\\_mayangular\\app_answer\\src\\app\\service\\comment.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { commentModel } from '../schema/commentModel';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommentService {\napiUrl='https://jsonplaceholder.typicode.com/comments';\n\nconstructor(private http:HttpClient){}\n\ngetComments():Observable<commentModel[]>{\n\n  return this.http.get<commentModel[]>(this.apiUrl,{ headers: new HttpHeaders({'Content-Type': 'application/json;charset=utf-8'})})\n}\n\n\n}\n"],"mappings":"AAEA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAG9D,MAGaC,cAAc;EAG3BC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAFxB,KAAAC,MAAM,GAAC,+CAA+C;EAEjB;EAErCC,WAAWA,CAAA;IAET,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAiB,IAAI,CAACF,MAAM,EAAC;MAAEG,OAAO,EAAE,IAAIP,WAAW,CAAC;QAAC,cAAc,EAAE;MAAgC,CAAC;IAAC,CAAC,CAAC;EACnI;;AARaC,cAAc,C;mBAAdA,cAAc,EAAAO,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAdV,cAAc,C;SAAdA,cAAc;EAAAW,OAAA,EAAdX,cAAc,CAAAY,IAAA;EAAAC,UAAA,EAFb;AAAM;SAEPb,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}